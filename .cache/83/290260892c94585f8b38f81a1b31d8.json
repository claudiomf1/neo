{"id":"nblG","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/@restart/ui/package.json","includedInParent":true,"mtime":1671040804690},{"name":"react","loc":{"line":6,"column":27,"index":440},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownItem.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"@restart/hooks/useEventCallback","loc":{"line":7,"column":29,"index":478},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownItem.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useEventCallback.js"},{"name":"./SelectableContext","loc":{"line":8,"column":48,"index":561},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownItem.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/SelectableContext.js"},{"name":"./NavContext","loc":{"line":9,"column":23,"index":607},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownItem.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/NavContext.js"},{"name":"./Button","loc":{"line":10,"column":19,"index":642},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownItem.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/Button.js"},{"name":"./DataKey","loc":{"line":11,"column":25,"index":679},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownItem.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/DataKey.js"},{"name":"react/jsx-runtime","loc":{"line":12,"column":28,"index":720},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownItem.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.useDropdownItem = useDropdownItem;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@restart/hooks/useEventCallback\"));\nvar _SelectableContext = _interopRequireWildcard(require(\"./SelectableContext\"));\nvar _NavContext = _interopRequireDefault(require(\"./NavContext\"));\nvar _Button = _interopRequireDefault(require(\"./Button\"));\nvar _DataKey = require(\"./DataKey\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nfunction useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = (0, React.useContext)(_SelectableContext.default);\n  const navContext = (0, React.useContext)(_NavContext.default);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = (0, _SelectableContext.makeEventKey)(key, href);\n  const isActive = active == null && key != null ? (0, _SelectableContext.makeEventKey)(activeKey) === eventKey : active;\n  const handleClick = (0, _useEventCallback.default)(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [(0, _DataKey.dataAttr)('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      eventKey,\n      disabled,\n      onClick,\n      active,\n      as: Component = _Button.default\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nvar _default = DropdownItem;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"b1757a9f4207afc75bc82626d08f24f8","cacheData":{"env":{}}}