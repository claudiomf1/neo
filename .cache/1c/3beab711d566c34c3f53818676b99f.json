{"id":"CxN5","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/@restart/ui/package.json","includedInParent":true,"mtime":1671040804690},{"name":"react","loc":{"line":2,"column":23,"index":72},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownToggle.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"./ssr","loc":{"line":3,"column":29,"index":110},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownToggle.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/ssr.js"},{"name":"./DropdownContext","loc":{"line":4,"column":28,"index":147},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownToggle.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownContext.js"},{"name":"react/jsx-runtime","loc":{"line":6,"column":28,"index":255},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownToggle.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isRoleMenu = exports.default = void 0;\nexports.useDropdownToggle = useDropdownToggle;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _ssr = require(\"./ssr\");\nvar _DropdownContext = _interopRequireDefault(require(\"./DropdownContext\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst isRoleMenu = el => {\n  var _el$getAttribute;\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\nexports.isRoleMenu = isRoleMenu;\nconst noop = () => {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\nfunction useDropdownToggle() {\n  const id = (0, _ssr.useSSRSafeId)();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = (0, React.useContext)(_DropdownContext.default) || {};\n  const handleClick = (0, React.useCallback)(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  }; // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n  return [props, {\n    show,\n    toggle\n  }];\n}\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownToggle.displayName = 'DropdownToggle';\n/** @component */\nvar _default = DropdownToggle;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"6267e5ec30e3b8dd2b4c66d6e6b9c1c4","cacheData":{"env":{}}}