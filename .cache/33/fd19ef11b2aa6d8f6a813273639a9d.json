{"id":"RwIT","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/@restart/hooks/package.json","includedInParent":true,"mtime":1671040804526},{"name":"./useUpdatedRef","loc":{"line":1,"column":26,"index":26},"parent":"/home/claudio/neo/node_modules/@restart/hooks/esm/useWillUnmount.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useUpdatedRef.js"},{"name":"react","loc":{"line":2,"column":26,"index":71},"parent":"/home/claudio/neo/node_modules/@restart/hooks/esm/useWillUnmount.js","resolved":"/home/claudio/neo/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useWillUnmount;\nvar _useUpdatedRef = _interopRequireDefault(require(\"./useUpdatedRef\"));\nvar _react = require(\"react\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nfunction useWillUnmount(fn) {\n  var onUnmount = (0, _useUpdatedRef.default)(fn);\n  (0, _react.useEffect)(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}"},"sourceMaps":null,"error":null,"hash":"04cc82514cb0ddca28abf0ef03006345","cacheData":{"env":{}}}