{"id":"P7cb","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/react-bootstrap/package.json","includedInParent":true,"mtime":1671040805866},{"name":"react","loc":{"line":1,"column":23,"index":23},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"invariant","loc":{"line":2,"column":22,"index":54},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js","resolved":"/home/claudio/neo/node_modules/invariant/browser.js"},{"name":"uncontrollable","loc":{"line":3,"column":32,"index":99},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js","resolved":"/home/claudio/neo/node_modules/uncontrollable/lib/esm/index.js"},{"name":"./createChainedFunction","loc":{"line":4,"column":26,"index":143},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/createChainedFunction.js"},{"name":"./ElementChildren","loc":{"line":5,"column":20,"index":190},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ElementChildren.js"},{"name":"./ButtonGroup","loc":{"line":6,"column":24,"index":235},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ButtonGroup.js"},{"name":"./ToggleButton","loc":{"line":7,"column":25,"index":277},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButton.js"},{"name":"react/jsx-runtime","loc":{"line":8,"column":28,"index":323},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToggleButtonGroup.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _uncontrollable = require(\"uncontrollable\");\nvar _createChainedFunction = _interopRequireDefault(require(\"./createChainedFunction\"));\nvar _ElementChildren = require(\"./ElementChildren\");\nvar _ButtonGroup = _interopRequireDefault(require(\"./ButtonGroup\"));\nvar _ToggleButton = _interopRequireDefault(require(\"./ToggleButton\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    children,\n    type,\n    name,\n    value,\n    onChange,\n    ...controlledProps\n  } = (0, _uncontrollable.useUncontrolled)(props, {\n    value: 'onChange'\n  });\n  const getValues = () => value == null ? [] : [].concat(value);\n  const handleToggle = (inputVal, event) => {\n    if (!onChange) {\n      return;\n    }\n    const values = getValues();\n    const isActive = values.indexOf(inputVal) !== -1;\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n    if (isActive) {\n      onChange(values.filter(n => n !== inputVal), event);\n    } else {\n      onChange([...values, inputVal], event);\n    }\n  };\n  !(type !== 'radio' || !!name) ? \"production\" !== \"production\" ? (0, _invariant.default)(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : (0, _invariant.default)(false) : void 0;\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ButtonGroup.default, {\n    ...controlledProps,\n    ref: ref,\n    children: (0, _ElementChildren.map)(children, child => {\n      const values = getValues();\n      const {\n        value: childVal,\n        onChange: childOnChange\n      } = child.props;\n      const handler = e => handleToggle(childVal, e);\n      return /*#__PURE__*/React.cloneElement(child, {\n        type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: (0, _createChainedFunction.default)(childOnChange, handler)\n      });\n    })\n  });\n});\nToggleButtonGroup.defaultProps = defaultProps;\nvar _default = Object.assign(ToggleButtonGroup, {\n  Button: _ToggleButton.default\n});\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"585173f63abd6b1a8ff0e1f4f5cfb904","cacheData":{"env":{"NODE_ENV":"production"}}}