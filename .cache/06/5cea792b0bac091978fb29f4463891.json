{"id":"abSs","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/@restart/ui/package.json","includedInParent":true,"mtime":1671040804690},{"name":"dom-helpers/ownerDocument","loc":{"line":1,"column":26,"index":26},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/useWaitForDOMRef.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/ownerDocument.js"},{"name":"dom-helpers/canUseDOM","loc":{"line":2,"column":22,"index":77},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/useWaitForDOMRef.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/canUseDOM.js"},{"name":"react","loc":{"line":3,"column":36,"index":138},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/useWaitForDOMRef.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"./useWindow","loc":{"line":4,"column":22,"index":169},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/useWaitForDOMRef.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/useWindow.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useWaitForDOMRef;\nexports.resolveContainerRef = void 0;\nvar _ownerDocument = _interopRequireDefault(require(\"dom-helpers/ownerDocument\"));\nvar _canUseDOM = _interopRequireDefault(require(\"dom-helpers/canUseDOM\"));\nvar _react = require(\"react\");\nvar _useWindow = _interopRequireDefault(require(\"./useWindow\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst resolveContainerRef = (ref, document) => {\n  if (!_canUseDOM.default) return null;\n  if (ref == null) return (document || (0, _ownerDocument.default)()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexports.resolveContainerRef = resolveContainerRef;\nfunction useWaitForDOMRef(ref, onResolved) {\n  const window = (0, _useWindow.default)();\n  const [resolvedRef, setRef] = (0, _react.useState)(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  (0, _react.useEffect)(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  (0, _react.useEffect)(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}"},"sourceMaps":null,"error":null,"hash":"5c259964b60e3a15d12009a4604a6a44","cacheData":{"env":{}}}