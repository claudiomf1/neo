{"id":"gFz3","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/@restart/ui/package.json","includedInParent":true,"mtime":1671040804690},{"name":"dom-helpers/querySelectorAll","loc":{"line":5,"column":16,"index":398},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/querySelectorAll.js"},{"name":"react","loc":{"line":7,"column":46,"index":508},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"@restart/hooks/useForceUpdate","loc":{"line":8,"column":27,"index":544},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useForceUpdate.js"},{"name":"@restart/hooks/useMergedRefs","loc":{"line":9,"column":26,"index":603},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useMergedRefs.js"},{"name":"./NavContext","loc":{"line":10,"column":23,"index":658},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/NavContext.js"},{"name":"./SelectableContext","loc":{"line":11,"column":48,"index":722},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/SelectableContext.js"},{"name":"./TabContext","loc":{"line":12,"column":23,"index":768},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/TabContext.js"},{"name":"./DataKey","loc":{"line":13,"column":35,"index":819},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/DataKey.js"},{"name":"./NavItem","loc":{"line":14,"column":20,"index":852},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/NavItem.js"},{"name":"react/jsx-runtime","loc":{"line":15,"column":28,"index":893},"parent":"/home/claudio/neo/node_modules/@restart/ui/esm/Nav.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _querySelectorAll = _interopRequireDefault(require(\"dom-helpers/querySelectorAll\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useForceUpdate = _interopRequireDefault(require(\"@restart/hooks/useForceUpdate\"));\nvar _useMergedRefs = _interopRequireDefault(require(\"@restart/hooks/useMergedRefs\"));\nvar _NavContext = _interopRequireDefault(require(\"./NavContext\"));\nvar _SelectableContext = _interopRequireWildcard(require(\"./SelectableContext\"));\nvar _TabContext = _interopRequireDefault(require(\"./TabContext\"));\nvar _DataKey = require(\"./DataKey\");\nvar _NavItem = _interopRequireDefault(require(\"./NavItem\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = (0, _DataKey.dataAttr)('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = (0, _useForceUpdate.default)();\n  const needsRefocusRef = (0, React.useRef)(false);\n  const parentOnSelect = (0, React.useContext)(_SelectableContext.default);\n  const tabContext = (0, React.useContext)(_TabContext.default);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey; // TODO: do we need to duplicate these?\n\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = (0, React.useRef)(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = (0, _querySelectorAll.default)(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[(0, _DataKey.dataProp)('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  (0, React.useEffect)(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = (0, _useMergedRefs.default)(ref, listNode);\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_SelectableContext.default.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavContext.default.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: (0, _SelectableContext.makeEventKey)(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nvar _default = Object.assign(Nav, {\n  Item: _NavItem.default\n});\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"5013e54b0cfcda943d67b7b69e63a96e","cacheData":{"env":{}}}