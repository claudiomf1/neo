{"id":"T9Ui","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/react-bootstrap/package.json","includedInParent":true,"mtime":1671040805866},{"name":"classnames","loc":{"line":1,"column":23,"index":23},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormLabel.js","resolved":"/home/claudio/neo/node_modules/classnames/index.js"},{"name":"react","loc":{"line":3,"column":27,"index":96},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormLabel.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"warning","loc":{"line":4,"column":20,"index":125},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormLabel.js","resolved":"/home/claudio/neo/node_modules/warning/warning.js"},{"name":"./Col","loc":{"line":5,"column":16,"index":152},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormLabel.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/Col.js"},{"name":"./FormContext","loc":{"line":6,"column":24,"index":185},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormLabel.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormContext.js"},{"name":"./ThemeProvider","loc":{"line":7,"column":35,"index":237},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormLabel.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ThemeProvider.js"},{"name":"react/jsx-runtime","loc":{"line":8,"column":28,"index":284},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormLabel.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _warning = _interopRequireDefault(require(\"warning\"));\nvar _Col = _interopRequireDefault(require(\"./Col\"));\nvar _FormContext = _interopRequireDefault(require(\"./FormContext\"));\nvar _ThemeProvider = require(\"./ThemeProvider\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = (0, React.useContext)(_FormContext.default);\n  bsPrefix = (0, _ThemeProvider.useBootstrapPrefix)(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = (0, _classnames.default)(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  \"production\" !== \"production\" ? (0, _warning.default)(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Col.default, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    (0, _jsxRuntime.jsx)(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nvar _default = FormLabel;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"3f573d22a2b5a44a558ab6ce87d4537e","cacheData":{"env":{"NODE_ENV":"production"}}}