{"id":"Pc67","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/react-bootstrap/package.json","includedInParent":true,"mtime":1671040805866},{"name":"classnames","loc":{"line":1,"column":23,"index":23},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/classnames/index.js"},{"name":"@restart/hooks/useBreakpoint","loc":{"line":2,"column":26,"index":63},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useBreakpoint.js"},{"name":"@restart/hooks/useEventCallback","loc":{"line":3,"column":29,"index":124},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useEventCallback.js"},{"name":"react","loc":{"line":5,"column":78,"index":269},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"@restart/ui/Modal","loc":{"line":6,"column":22,"index":300},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/Modal.js"},{"name":"./Fade","loc":{"line":7,"column":17,"index":338},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/Fade.js"},{"name":"./OffcanvasBody","loc":{"line":8,"column":26,"index":374},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/OffcanvasBody.js"},{"name":"./OffcanvasToggling","loc":{"line":9,"column":30,"index":423},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/OffcanvasToggling.js"},{"name":"./ModalContext","loc":{"line":10,"column":25,"index":471},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ModalContext.js"},{"name":"./NavbarContext","loc":{"line":11,"column":26,"index":515},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/NavbarContext.js"},{"name":"./OffcanvasHeader","loc":{"line":12,"column":28,"index":562},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/OffcanvasHeader.js"},{"name":"./OffcanvasTitle","loc":{"line":13,"column":27,"index":610},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/OffcanvasTitle.js"},{"name":"./ThemeProvider","loc":{"line":14,"column":35,"index":665},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ThemeProvider.js"},{"name":"./BootstrapModalManager","loc":{"line":15,"column":56,"index":740},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/BootstrapModalManager.js"},{"name":"react/jsx-runtime","loc":{"line":18,"column":30,"index":905},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Offcanvas.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _useBreakpoint = _interopRequireDefault(require(\"@restart/hooks/useBreakpoint\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@restart/hooks/useEventCallback\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Modal = _interopRequireDefault(require(\"@restart/ui/Modal\"));\nvar _Fade = _interopRequireDefault(require(\"./Fade\"));\nvar _OffcanvasBody = _interopRequireDefault(require(\"./OffcanvasBody\"));\nvar _OffcanvasToggling = _interopRequireDefault(require(\"./OffcanvasToggling\"));\nvar _ModalContext = _interopRequireDefault(require(\"./ModalContext\"));\nvar _NavbarContext = _interopRequireDefault(require(\"./NavbarContext\"));\nvar _OffcanvasHeader = _interopRequireDefault(require(\"./OffcanvasHeader\"));\nvar _OffcanvasTitle = _interopRequireDefault(require(\"./OffcanvasTitle\"));\nvar _ThemeProvider = require(\"./ThemeProvider\");\nvar _BootstrapModalManager = _interopRequireWildcard(require(\"./BootstrapModalManager\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start',\n  renderStaticNode: false\n};\nfunction DialogTransition(props) {\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_OffcanvasToggling.default, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Fade.default, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n  responsive,\n  /* BaseModal props */\n\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode,\n  ...props\n}, ref) => {\n  const modalManager = (0, React.useRef)();\n  bsPrefix = (0, _ThemeProvider.useBootstrapPrefix)(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = (0, React.useContext)(_NavbarContext.default) || {};\n  const [showOffcanvas, setShowOffcanvas] = (0, React.useState)(false);\n  const hideResponsiveOffcanvas = (0, _useBreakpoint.default)(responsive || 'xs', 'up');\n  (0, React.useEffect)(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = (0, _useEventCallback.default)(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = (0, React.useMemo)(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new _BootstrapModalManager.default({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return (0, _BootstrapModalManager.getSharedManager)();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n  const renderBackdrop = (0, React.useCallback)(backdropProps => /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n    ...backdropProps,\n    className: (0, _classnames.default)(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: (0, _classnames.default)(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ModalContext.default.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Modal.default, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nvar _default = Object.assign(Offcanvas, {\n  Body: _OffcanvasBody.default,\n  Header: _OffcanvasHeader.default,\n  Title: _OffcanvasTitle.default\n});\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"a332ff85c03a0f2dabfa2f8e1fb42ac6","cacheData":{"env":{}}}