{"id":"kMBg","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/react-bootstrap/package.json","includedInParent":true,"mtime":1671040805866},{"name":"classnames","loc":{"line":1,"column":23,"index":23},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/classnames/index.js"},{"name":"react","loc":{"line":3,"column":36,"index":105},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"./Feedback","loc":{"line":4,"column":21,"index":135},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/Feedback.js"},{"name":"./FormCheckInput","loc":{"line":5,"column":27,"index":176},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheckInput.js"},{"name":"./FormCheckLabel","loc":{"line":6,"column":27,"index":223},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheckLabel.js"},{"name":"./FormContext","loc":{"line":7,"column":24,"index":267},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormContext.js"},{"name":"./ThemeProvider","loc":{"line":8,"column":35,"index":319},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ThemeProvider.js"},{"name":"./ElementChildren","loc":{"line":9,"column":31,"index":369},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ElementChildren.js"},{"name":"react/jsx-runtime","loc":{"line":12,"column":30,"index":528},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/FormCheck.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Feedback = _interopRequireDefault(require(\"./Feedback\"));\nvar _FormCheckInput = _interopRequireDefault(require(\"./FormCheckInput\"));\nvar _FormCheckLabel = _interopRequireDefault(require(\"./FormCheckLabel\"));\nvar _FormContext = _interopRequireDefault(require(\"./FormContext\"));\nvar _ThemeProvider = require(\"./ThemeProvider\");\nvar _ElementChildren = require(\"./ElementChildren\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = (0, _ThemeProvider.useBootstrapPrefix)(bsPrefix, 'form-check');\n  bsSwitchPrefix = (0, _ThemeProvider.useBootstrapPrefix)(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = (0, React.useContext)(_FormContext.default);\n  const innerFormContext = (0, React.useMemo)(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || (0, _ElementChildren.hasChildOfType)(children, _FormCheckLabel.default);\n  const input = /*#__PURE__*/(0, _jsxRuntime.jsx)(_FormCheckInput.default, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_FormContext.default.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n      style: style,\n      className: (0, _classnames.default)(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/(0, _jsxRuntime.jsx)(_FormCheckLabel.default, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/(0, _jsxRuntime.jsx)(_Feedback.default, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nvar _default = Object.assign(FormCheck, {\n  Input: _FormCheckInput.default,\n  Label: _FormCheckLabel.default\n});\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"15197dc45ad4db30eb1e4188a1a31401","cacheData":{"env":{}}}