{"id":"epbv","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dadosct = void 0;\nexports.retorna_dadosct = retorna_dadosct;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar CampoCliente = document.getElementById(\"Cliente\");\nvar CampoCnpj = document.getElementById(\"Cnpj\");\nvar CampoContato = document.getElementById(\"Contato\");\nvar CampoRua = document.getElementById(\"Rua\");\nvar CampoBairro = document.getElementById(\"Bairro\");\nvar CampoCidade = document.getElementById(\"Cidade\");\nvar CampoEstado = document.getElementById(\"Estado\");\nvar CampoObs = document.getElementById(\"Obs\");\nvar CampoListaCliente = document.getElementById(\"ListaCliente\");\nfunction CaixaAlta(e) {\n  var ss = e.target.selectionStart;\n  var se = e.target.selectionEnd;\n  e.target.value = e.target.value.toUpperCase();\n  e.target.selectionStart = ss;\n  e.target.selectionEnd = se;\n}\nvar CaixaMsg = document.getElementById(\"CaixaMsg\");\nvar TituloMsg = document.getElementById(\"TituloMsg\");\nvar CorpoMsg = document.getElementById(\"CorpoMsg\");\nvar RodapeMsg = document.getElementById(\"RodapeMsg\");\nvar BtnFechar = '<button class = \"orange\" onclick= \"Fechar()\" style = \"cursor:pointer\" ><b> <font color= \"black\" size = \"5\">Fechar</font></b></button>';\nfunction caixaMsgbox(m) {\n  CaixaMsg.style.display = \"block\";\n  TituloMsg.innerHTML = \"AVISO\";\n  CorpoMsg.innerHTML = m;\n  RodapeMsg.innerHTML = BtnFechar;\n}\nfunction Fechar() {\n  CaixaMsg.style.display = \"none\";\n}\nvar Confirm = new Mensagem();\nfunction Mensagem() {\n  this.Executar = function () {\n    CaixaMsg.style.display = \"block\";\n    TituloMsg.innerHTML = \"AVISO\";\n    CorpoMsg.innerHTML = \"DESEJA REALMENTE EXCLUIRRRR?\";\n    var BtnSim = '<button class = \"green\" onclick = \"Confirm.Sim()\" style = \"cursor:pointer\" ><b><font color = \"black\" size = \"5\">Sim</font></b></button>';\n    var BtnNao = '<button class = \"red\" onclick = \"Confirm.Nao()\" style = \"cursor:pointer\" ><b><font color = \"black\"  size = \"5\">Não</font></b></button>';\n    RodapeMsg.innerHTML = BtnSim + BtnNao;\n  };\n  this.Nao = function () {\n    Fechar();\n  };\n  this.Sim = function () {\n    var nomeCliente = CampoListaCliente.value;\n    if (nomeCliente == \"\" || nomeCliente == \"Escolha um Cliente\") {\n      CorpoMsg.innerHTML = \"CANCELADO. CAMPO LISTA NÃO PODE SER VAZIO!\";\n      RodapeMsg.innerHTML = BtnFechar;\n      return;\n    }\n    ExcluirCliente();\n  };\n}\nfunction MascaraCnpj() {\n  var CNPJ = CampoCnpj.value;\n  if (CNPJ.length == 2) {\n    CNPJ = CNPJ + \".\";\n    CampoCnpj.value = CNPJ;\n    return true;\n  }\n  if (CNPJ.length == 6) {\n    CNPJ = CNPJ + \".\";\n    CampoCnpj.value = CNPJ;\n    return true;\n  }\n  if (CNPJ.length == 10) {\n    CNPJ = CNPJ + \"/\";\n    CampoCnpj.value = CNPJ;\n    return true;\n  }\n  if (CNPJ.length == 15) {\n    CNPJ = CNPJ + \"-\";\n    CampoCnpj.value = CNPJ;\n    return true;\n  }\n}\nfunction MascaraTelefone() {\n  //let CampoTel = document.getElementById(\"Contato\");\n  var Tel = CampoContato.value;\n  if (Tel.length == 1) {\n    Tel = \"(\" + Tel;\n    CampoContato.value = Tel;\n    return true;\n  }\n  if (Tel.length == 3) {\n    Tel = Tel + \")\";\n    CampoContato.value = Tel;\n    return true;\n  }\n  if (Tel.length == 9) {\n    Tel = Tel + \"-\";\n    CampoContato.value = Tel;\n    return true;\n  }\n}\nfunction VerificarCliente() {\n  var listaCliente = CampoListaCliente.value;\n  // alert(\"teste \")\n  var nomeCliente = CampoCliente.value;\n  if (listaCliente.trim().length != 0) {\n    return false;\n  }\n  google.script.run.withSuccessHandler(Retorno).VerificarCliente(nomeCliente);\n  function Retorno(r) {\n    if (r == \"CLIENTE JÁ CADASTRADO!\") {\n      if (CampoCliente.value != \"\") {\n        CampoCliente.focus();\n        var m = r;\n        caixaMsgbox(m);\n      }\n      CampoCliente.value = \"\";\n      CampoCliente.focus();\n    }\n  }\n}\n\n// document.getElementById(\"btnSalvar\").addEventListener(\"click\", SalvarCliente);\n//--------------------------------------------------------------------------------------------\nfunction SalvarCliente() {\n  var Cliente = CampoCliente.value;\n  var Cnpj = CampoCnpj.value;\n  var Contato = CampoContato.value;\n  var Rua = CampoRua.value;\n  var Bairro = CampoBairro.value;\n  var Cidade = CampoCidade.value;\n  var Estado = CampoEstado.value;\n  Cliente = Cliente.trim();\n  Cnpj = Cnpj.trim();\n  Contato = Contato.trim();\n  Cidade = Cidade.trim();\n  if (Cliente == \"\" || Cnpj == \"\" || Contato == \"\" || Bairro == \"\" || Cidade == \"\" || Estado == \"\") {\n    var m = \"PRECISA PREENCHER TODOS OS CAMPOS!\";\n    caixaMsgbox(m);\n    return false;\n  }\n  var Dados = {\n    Cliente: Cliente,\n    Cnpj: Cnpj,\n    Contato: Contato,\n    Rua: Rua,\n    Bairro: Bairro,\n    Cidade: Cidade,\n    Estado: Estado,\n    Obs: CampoObs.value\n  };\n  google.script.run.withSuccessHandler(Salvar).SalvarCliente(Dados);\n  function Salvar(r) {\n    var m = r;\n    caixaMsgbox(m);\n    if (r != \"CLIENTE JÁ CADASTRADO!\") {\n      Limpar();\n    }\n  }\n}\n\n// document.getElementById(\"ListaCliente\").addEventListener(\"input\", Pesquisar);\n\nfunction Pesquisar() {\n  var nomeCliente = CampoListaCliente.value;\n  google.script.run.withSuccessHandler(Carregar).PesquisarCliente(nomeCliente);\n}\nfunction Carregar(r) {\n  if (r != \"CLIENTE NÃO ENCONTRADO!\") {\n    CampoCliente.value = r[0];\n    M.updateTextFields();\n    CampoCnpj.value = r[1];\n    M.updateTextFields();\n    CampoContato.value = r[2];\n    M.updateTextFields();\n    CampoRua.value = r[3];\n    M.updateTextFields();\n    CampoBairro.value = r[4];\n    M.updateTextFields();\n    CampoCidade.value = r[5];\n    M.updateTextFields();\n    CampoEstado.value = r[6];\n    M.updateTextFields();\n    CampoObs.value = r[7];\n    M.updateTextFields();\n    CampoListaCliente.value = r[0];\n  } else {\n    var m = r;\n    caixaMsgbox(m);\n  }\n}\n\n// document.getElementById(\"btnLimpar\").addEventListener(\"click\", Limpar);\n\nfunction Limpar() {\n  CampoCliente.value = \"\";\n  CampoCnpj.value = \"\";\n  CampoContato.value = \"\";\n  CampoRua.value = \"\";\n  CampoBairro.value = \"\";\n  CampoCidade.value = \"\";\n  CampoEstado.value = \"\";\n  CampoObs.value = \"\";\n  CampoListaCliente.value = \"\";\n  AtualizarClientes();\n}\n\n// document.getElementById(\"btnEditar\").addEventListener(\"click\", EditarCliente);\n\nfunction EditarCliente() {\n  var nomeCliente = CampoListaCliente.value;\n  var Cliente = CampoCliente.value;\n  var Cnpj = CampoCnpj.value;\n  var Contato = CampoContato.value;\n  var Rua = CampoRua.value;\n  var Bairro = CampoBairro.value;\n  var Cidade = CampoCidade.value;\n  var Estado = CampoEstado.value;\n  var ListaCliente = CampoListaCliente.value;\n  Cliente = Cliente.trim();\n  Cnpj = Cnpj.trim();\n  Contato = Contato.trim();\n  Cidade = Cidade.trim();\n  if (nomeCliente == \"\" || nomeCliente == \"Escolha um Cliente\") {\n    var m = \"PRECISA SELECIONAR CLIENTE NA LISTA!\";\n    caixaMsgbox(m);\n    return;\n  }\n  if (Cliente == \"\" || Cnpj == \"\" || Contato == \"\" || Bairro == \"\" || Cidade == \"\" || Estado == \"\" || ListaCliente == \"\") {\n    var _m = \"PRECISA PREENCHER TODOS OS CAMPOS!\";\n    caixaMsgbox(_m);\n    return;\n  }\n  var Dados = {\n    nomeCliente: nomeCliente,\n    Cliente: Cliente,\n    Cnpj: Cnpj,\n    Contato: Contato,\n    Rua: Rua,\n    Bairro: Bairro,\n    Cidade: Cidade,\n    Estado: Estado,\n    Obs: CampoObs.value\n  };\n  google.script.run.withSuccessHandler(Retorno).EditarCliente(Dados);\n  function Retorno(r) {\n    var m = r;\n    caixaMsgbox(m);\n    if (r != \"CLIENTE NÃO ENCONTRADO!\") {\n      Limpar();\n    }\n  }\n}\nfunction ExcluirCliente() {\n  var nomeCliente = CampoListaCliente.value;\n  google.script.run.withSuccessHandler(Excluir).ExcluirCliente(nomeCliente);\n  function Excluir(r) {\n    if (r == \"EXCLUIDO COM SUCESSO!\") {\n      var m = r;\n      caixaMsgbox(m);\n      Limpar();\n    } else {\n      var _m2 = r;\n      caixaMsgbox(_m2);\n    }\n  }\n}\n//---------------------------------------------------\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n//------------------------------\nfunction AtualizarClientes() {\n  while (CampoListaCliente.length) {\n    CampoListaCliente.remove(0);\n  }\n  var NovaOpcao = document.createElement(\"option\");\n  var Texto = document.createTextNode(\"Escolha um Cliente\");\n  NovaOpcao.appendChild(Texto);\n  CampoListaCliente.insertBefore(NovaOpcao, CampoListaCliente.lastChild);\n  CampoListaCliente.options[0].disabled = true;\n  google.script.run.withSuccessHandler(Carregar).AtualizarListaClientes();\n  function Carregar(_x) {\n    return _Carregar.apply(this, arguments);\n  }\n  function _Carregar() {\n    _Carregar = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(clientes) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              clientes.forEach(function (r) {\n                var NovaOpcao = document.createElement(\"option\");\n                var Texto = document.createTextNode(r[1]);\n                NovaOpcao.appendChild(Texto);\n                CampoListaCliente.insertBefore(NovaOpcao, CampoListaCliente.lastChild);\n              });\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _Carregar.apply(this, arguments);\n  }\n}\n\n// document.addEventListener(\"DOMContentLoaded\", PesquisaAbrir);\n\nfunction PesquisaAbrir() {\n  if (CampoListaCliente.value != \"\") {\n    Pesquisar();\n  }\n}\n\n// document.getElementById(\"iconeCliente\").addEventListener(\"click\", FormFiltro);\n\nfunction FormFiltro() {\n  var Cliente = CampoListaCliente.value;\n  var Cnpj = CampoCnpj.value;\n  var Contato = CampoContato.value;\n  var Estado = CampoEstado.value;\n  var Cidade = CampoCidade.value;\n  google.script.run.withSuccessHandler().FormFiltroClientes(Cliente, Cnpj, Contato, Estado, Cidade);\n}\nvar dadosct = [];\nexports.dadosct = dadosct;\nvar tokenClient;\nvar gapiInited = false;\nvar gisInited = false;\nvar CLIENT_ID = \"167620078508-hhncerbeqjk9s1eo7f5ah71fekljd1ob.apps.googleusercontent.com\";\nvar API_KEY = \"AIzaSyDs11gmvAQb2xdRL_fWVvhrTRKyz4NoZ5w\";\n\n// Discovery doc URL for APIs used by the quickstart\nvar DISCOVERY_DOC = \"https://sheets.googleapis.com/$discovery/rest?version=v4\";\nvar SCOPES = \"https://www.googleapis.com/auth/spreadsheets.readonly\";\n\n//-------------------------------------------\nvar scripts = [\"https://apis.google.com/js/api.js\", \"https://accounts.google.com/gsi/client\"];\nfunction loadScripts(scripts) {\n  var script = scripts.shift();\n  var el = document.createElement(\"script\");\n  el.src = script;\n  document.body.appendChild(el);\n  if (scripts.length) {\n    loadScripts(scripts);\n  } else {\n    console.log(\"run app\");\n  }\n  // el.onload = function (script) {\n  //   // console.log(scripts.shift() + \" loaded!\");\n\n  // };\n}\n\n//loadScripts(scripts);\n\n//-----------------------------------------------------------------------\n\n// async function setDataForSearchCliente() {\n//   const myPromisse = new Promise(async (resolve, reject) => {\n//     let response = await gapi.client.sheets.spreadsheets.values.get({\n//       spreadsheetId: \"1DHcDn2eTzk6VNa3x3fhQ1X_RgTpGHfV09VWxHD2gk54\",\n//       range: \"Clientes!A6:C\",\n//     });\n//     if (response) {\n//       console.log(response.result.values);\n//       //alert(response.result.values);\n//       return response.result.values;\n//     }\n//   });\n// }\n// export function retorna_dadosct() {\n//   return setDataForSearchCliente();\n// }\n\n// async function setDataForSearchCliente() {\n//   const myPromisse = new Promise(async (resolve, reject) => {\n//     let response = await gapi.client.sheets.spreadsheets.values.get({\n//       spreadsheetId: \"1DHcDn2eTzk6VNa3x3fhQ1X_RgTpGHfV09VWxHD2gk54\",\n//       range: \"Clientes!A6:C\",\n//     });\n//     if (resolve) {\n//       return response.result.values;\n//     }\n//   });\n//   myPromisse.then((data) => {\n//     console.log(data);\n//   });\n// }\n\n//import GoogleAuth from 'google-auth-library/build/src/auth/googleauth'\n//import Rea } from \"react\";\n//import GoogleAuth from 'google-auth-library'\n//import GoogleAuth from 'google-auth-library/build/src/auth/googleauth'\n\n// const auth = new GoogleAuth({\n//   keyFile:\n//     '/home/claudio/neo/client_secret_167620078508-hhncerbeqjk9s1eo7f5ah71fekljd1ob.apps.googleusercontent.com.json',\n//   scopes: 'https://www.googleapis.com/auth/spreadsheets'\n// })\n//const token = await auth.getAccessToken()\n\n//\nfunction setDataForSearchCliente(_x2) {\n  return _setDataForSearchCliente.apply(this, arguments);\n} //----------------------------------------------------------------------------------\nfunction _setDataForSearchCliente() {\n  _setDataForSearchCliente = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(gapi) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // console.log('token:-> ', token)\n            console.log(\"gapi.client :>> \", gapi);\n            if (!(typeof gapi !== \"undefined\")) {\n              _context2.next = 5;\n              break;\n            }\n            _context2.next = 4;\n            return gapi.client.sheets.spreadsheets.values.get({\n              spreadsheetId: \"1DHcDn2eTzk6VNa3x3fhQ1X_RgTpGHfV09VWxHD2gk54\",\n              range: \"Clientes!A6:C\"\n            });\n          case 4:\n            response = _context2.sent;\n          case 5:\n            console.log(\"response\", response);\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _setDataForSearchCliente.apply(this, arguments);\n}\nfunction retorna_dadosct(gapi) {\n  return setDataForSearchCliente(gapi);\n}\n\n// async function setDataForSearchCliente() {\n//   let resposta = await gapi.client.sheets.spreadsheets.values.get({\n//     spreadsheetId: \"1DHcDn2eTzk6VNa3x3fhQ1X_RgTpGHfV09VWxHD2gk54\",\n//     range: \"Clientes!A6:C\",\n//   });\n//   if (resposta) {\n//     console.log(resposta);\n//   }\n//   return resposta;\n// }\n\n//alert(dadosct);\n// await gapi.google.script.run\n//   .withSuccessHandler(options)\n//   .getDataForSearch(\"clientes\", \"c6:c\");\n\n// async function options(dados) {\n//   dadosct = [...dados];\n//   console.log(dadosct);\n// }\n// dadosct2 = [...dadosct];\n//-------------------------------------------------------------------------------"},"sourceMaps":null,"error":null,"hash":"4a516c6048e8b730c67c7a1836df7604","cacheData":{"env":{}}}