{"id":"fkrW","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/react-bootstrap/package.json","includedInParent":true,"mtime":1671040805866},{"name":"react","loc":{"line":2,"column":56,"index":88},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"classnames","loc":{"line":3,"column":23,"index":120},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/classnames/index.js"},{"name":"@restart/hooks/useTimeout","loc":{"line":4,"column":23,"index":157},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useTimeout.js"},{"name":"./ToastFade","loc":{"line":5,"column":22,"index":208},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToastFade.js"},{"name":"./ToastHeader","loc":{"line":6,"column":24,"index":247},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToastHeader.js"},{"name":"./ToastBody","loc":{"line":7,"column":22,"index":286},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToastBody.js"},{"name":"./ThemeProvider","loc":{"line":8,"column":35,"index":336},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ThemeProvider.js"},{"name":"./ToastContext","loc":{"line":9,"column":25,"index":380},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ToastContext.js"},{"name":"react/jsx-runtime","loc":{"line":10,"column":28,"index":426},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Toast.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _useTimeout = _interopRequireDefault(require(\"@restart/hooks/useTimeout\"));\nvar _ToastFade = _interopRequireDefault(require(\"./ToastFade\"));\nvar _ToastHeader = _interopRequireDefault(require(\"./ToastHeader\"));\nvar _ToastBody = _interopRequireDefault(require(\"./ToastBody\"));\nvar _ThemeProvider = require(\"./ThemeProvider\");\nvar _ToastContext = _interopRequireDefault(require(\"./ToastContext\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = _ToastFade.default,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = (0, _ThemeProvider.useBootstrapPrefix)(bsPrefix, 'toast');\n\n  // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n  const delayRef = (0, React.useRef)(delay);\n  const onCloseRef = (0, React.useRef)(onClose);\n  (0, React.useEffect)(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = (0, _useTimeout.default)();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = (0, React.useCallback)(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  (0, React.useEffect)(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = (0, React.useMemo)(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n  const toast = /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n    ...props,\n    ref: ref,\n    className: (0, _classnames.default)(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ToastContext.default.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/(0, _jsxRuntime.jsx)(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nvar _default = Object.assign(Toast, {\n  Body: _ToastBody.default,\n  Header: _ToastHeader.default\n});\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"88ffb4d5cf0a258e709fc4fb9e282b40","cacheData":{"env":{}}}