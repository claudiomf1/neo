{"id":"lJZd","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/react-bootstrap/package.json","includedInParent":true,"mtime":1671040805866},{"name":"classnames","loc":{"line":1,"column":23,"index":23},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/classnames/index.js"},{"name":"react","loc":{"line":3,"column":27,"index":96},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"@restart/ui/DropdownMenu","loc":{"line":4,"column":32,"index":137},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/DropdownMenu.js"},{"name":"@restart/hooks/useIsomorphicEffect","loc":{"line":5,"column":32,"index":197},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useIsomorphicEffect.js"},{"name":"@restart/hooks/useMergedRefs","loc":{"line":6,"column":26,"index":261},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useMergedRefs.js"},{"name":"warning","loc":{"line":7,"column":20,"index":313},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/warning/warning.js"},{"name":"./DropdownContext","loc":{"line":8,"column":28,"index":352},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownContext.js"},{"name":"./InputGroupContext","loc":{"line":9,"column":30,"index":403},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/InputGroupContext.js"},{"name":"./NavbarContext","loc":{"line":10,"column":26,"index":452},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/NavbarContext.js"},{"name":"./ThemeProvider","loc":{"line":11,"column":35,"index":506},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ThemeProvider.js"},{"name":"./useWrappedRefWithWarning","loc":{"line":12,"column":37,"index":562},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js"},{"name":"./types","loc":{"line":13,"column":30,"index":622},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/types.js"},{"name":"react/jsx-runtime","loc":{"line":14,"column":28,"index":661},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/DropdownMenu.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.getDropdownMenuPlacement = getDropdownMenuPlacement;\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _DropdownMenu = require(\"@restart/ui/DropdownMenu\");\nvar _useIsomorphicEffect = _interopRequireDefault(require(\"@restart/hooks/useIsomorphicEffect\"));\nvar _useMergedRefs = _interopRequireDefault(require(\"@restart/hooks/useMergedRefs\"));\nvar _warning = _interopRequireDefault(require(\"warning\"));\nvar _DropdownContext = _interopRequireDefault(require(\"./DropdownContext\"));\nvar _InputGroupContext = _interopRequireDefault(require(\"./InputGroupContext\"));\nvar _NavbarContext = _interopRequireDefault(require(\"./NavbarContext\"));\nvar _ThemeProvider = require(\"./ThemeProvider\");\nvar _useWrappedRefWithWarning = _interopRequireDefault(require(\"./useWrappedRefWithWarning\"));\nvar _types = require(\"./types\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst defaultProps = {\n  flip: true\n};\nfunction getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;else if (dropDirection === 'down-centered') placement = 'bottom';else if (dropDirection === 'up-centered') placement = 'top';\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = (0, React.useContext)(_NavbarContext.default);\n  const prefix = (0, _ThemeProvider.useBootstrapPrefix)(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = (0, React.useContext)(_DropdownContext.default);\n  align = align || contextAlign;\n  const isInputGroup = (0, React.useContext)(_InputGroupContext.default);\n  const alignClasses = [];\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      \"production\" !== \"production\" ? (0, _warning.default)(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint];\n\n        // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = (0, _DropdownMenu.useDropdownMenu)({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = (0, _useMergedRefs.default)((0, _useWrappedRefWithWarning.default)(ref, 'DropdownMenu'), menuProps.ref);\n  (0, _useIsomorphicEffect.default)(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null;\n\n  // For custom components provide additional, non-DOM, props;\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n    menuProps.align = align;\n  }\n  let style = props.style;\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = {\n      ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {\n    ...props,\n    ...menuProps,\n    style: style\n    // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: (0, _classnames.default)(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nvar _default = DropdownMenu;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"bef88e9a9afcb65a9e15db63b84e1098","cacheData":{"env":{"NODE_ENV":"production"}}}