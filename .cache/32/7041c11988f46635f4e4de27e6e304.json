{"id":"ArHr","dependencies":[{"name":"/home/claudio/neo/package.json","includedInParent":true,"mtime":1671579531318},{"name":"/home/claudio/neo/node_modules/react-bootstrap/package.json","includedInParent":true,"mtime":1671040805866},{"name":"classnames","loc":{"line":1,"column":23,"index":23},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/classnames/index.js"},{"name":"dom-helpers/addEventListener","loc":{"line":2,"column":29,"index":66},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/addEventListener.js"},{"name":"dom-helpers/canUseDOM","loc":{"line":3,"column":22,"index":120},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/canUseDOM.js"},{"name":"dom-helpers/ownerDocument","loc":{"line":4,"column":26,"index":171},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/ownerDocument.js"},{"name":"dom-helpers/removeEventListener","loc":{"line":5,"column":32,"index":232},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/removeEventListener.js"},{"name":"dom-helpers/scrollbarSize","loc":{"line":6,"column":29,"index":296},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/scrollbarSize.js"},{"name":"@restart/hooks/useCallbackRef","loc":{"line":7,"column":27,"index":352},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useCallbackRef.js"},{"name":"@restart/hooks/useEventCallback","loc":{"line":8,"column":29,"index":414},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useEventCallback.js"},{"name":"@restart/hooks/useMergedRefs","loc":{"line":9,"column":26,"index":475},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useMergedRefs.js"},{"name":"@restart/hooks/useWillUnmount","loc":{"line":10,"column":27,"index":534},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/@restart/hooks/esm/useWillUnmount.js"},{"name":"dom-helpers/transitionEnd","loc":{"line":11,"column":26,"index":593},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/dom-helpers/esm/transitionEnd.js"},{"name":"react","loc":{"line":13,"column":55,"index":709},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react/index.js"},{"name":"@restart/ui/Modal","loc":{"line":14,"column":22,"index":740},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/@restart/ui/esm/Modal.js"},{"name":"./BootstrapModalManager","loc":{"line":15,"column":33,"index":794},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/BootstrapModalManager.js"},{"name":"./Fade","loc":{"line":16,"column":17,"index":838},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/Fade.js"},{"name":"./ModalBody","loc":{"line":17,"column":22,"index":870},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ModalBody.js"},{"name":"./ModalContext","loc":{"line":18,"column":25,"index":910},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ModalContext.js"},{"name":"./ModalDialog","loc":{"line":19,"column":24,"index":952},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ModalDialog.js"},{"name":"./ModalFooter","loc":{"line":20,"column":24,"index":993},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ModalFooter.js"},{"name":"./ModalHeader","loc":{"line":21,"column":24,"index":1034},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ModalHeader.js"},{"name":"./ModalTitle","loc":{"line":22,"column":23,"index":1074},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ModalTitle.js"},{"name":"./ThemeProvider","loc":{"line":23,"column":45,"index":1135},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react-bootstrap/esm/ThemeProvider.js"},{"name":"react/jsx-runtime","loc":{"line":24,"column":28,"index":1182},"parent":"/home/claudio/neo/node_modules/react-bootstrap/esm/Modal.js","resolved":"/home/claudio/neo/node_modules/react/jsx-runtime.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _addEventListener = _interopRequireDefault(require(\"dom-helpers/addEventListener\"));\nvar _canUseDOM = _interopRequireDefault(require(\"dom-helpers/canUseDOM\"));\nvar _ownerDocument = _interopRequireDefault(require(\"dom-helpers/ownerDocument\"));\nvar _removeEventListener = _interopRequireDefault(require(\"dom-helpers/removeEventListener\"));\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\nvar _useCallbackRef = _interopRequireDefault(require(\"@restart/hooks/useCallbackRef\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@restart/hooks/useEventCallback\"));\nvar _useMergedRefs = _interopRequireDefault(require(\"@restart/hooks/useMergedRefs\"));\nvar _useWillUnmount = _interopRequireDefault(require(\"@restart/hooks/useWillUnmount\"));\nvar _transitionEnd = _interopRequireDefault(require(\"dom-helpers/transitionEnd\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Modal = _interopRequireDefault(require(\"@restart/ui/Modal\"));\nvar _BootstrapModalManager = require(\"./BootstrapModalManager\");\nvar _Fade = _interopRequireDefault(require(\"./Fade\"));\nvar _ModalBody = _interopRequireDefault(require(\"./ModalBody\"));\nvar _ModalContext = _interopRequireDefault(require(\"./ModalContext\"));\nvar _ModalDialog = _interopRequireDefault(require(\"./ModalDialog\"));\nvar _ModalFooter = _interopRequireDefault(require(\"./ModalFooter\"));\nvar _ModalHeader = _interopRequireDefault(require(\"./ModalHeader\"));\nvar _ModalTitle = _interopRequireDefault(require(\"./ModalTitle\"));\nvar _ThemeProvider = require(\"./ThemeProvider\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: _ModalDialog.default\n};\n\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Fade.default, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Fade.default, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = (0, React.useState)({});\n  const [animateStaticModal, setAnimateStaticModal] = (0, React.useState)(false);\n  const waitingForMouseUpRef = (0, React.useRef)(false);\n  const ignoreBackdropClickRef = (0, React.useRef)(false);\n  const removeStaticModalAnimationRef = (0, React.useRef)(null);\n  const [modal, setModalRef] = (0, _useCallbackRef.default)();\n  const mergedRef = (0, _useMergedRefs.default)(ref, setModalRef);\n  const handleHide = (0, _useEventCallback.default)(onHide);\n  const isRTL = (0, _ThemeProvider.useIsRTL)();\n  bsPrefix = (0, _ThemeProvider.useBootstrapPrefix)(bsPrefix, 'modal');\n  const modalContext = (0, React.useMemo)(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return (0, _BootstrapModalManager.getSharedManager)({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!_canUseDOM.default) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > (0, _ownerDocument.default)(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? (0, _scrollbarSize.default)() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? (0, _scrollbarSize.default)() : undefined\n    });\n  }\n  const handleWindowResize = (0, _useEventCallback.default)(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  (0, _useWillUnmount.default)(() => {\n    (0, _removeEventListener.default)(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = (0, _transitionEnd.default)(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    (0, _addEventListener.default)(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    (0, _removeEventListener.default)(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = (0, React.useCallback)(backdropProps => /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n    ...backdropProps,\n    className: (0, _classnames.default)(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: (0, _classnames.default)(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ModalContext.default.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Modal.default, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nvar _default = Object.assign(Modal, {\n  Body: _ModalBody.default,\n  Header: _ModalHeader.default,\n  Title: _ModalTitle.default,\n  Footer: _ModalFooter.default,\n  Dialog: _ModalDialog.default,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"255f1d513df538bb5902b2e85adcbb01","cacheData":{"env":{}}}